services:
  # FrankenPHP Service
  frankenphp:
    container_name: klinik
    image: laravel-klinik-app
    build:
      context: .
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        XDEBUG_ENABLED: ${XDEBUG_ENABLED:-true}
        XDEBUG_MODE: develop,coverage,debug,profile
        XDEBUG_HOST: ${XDEBUG_HOST:-host.docker.internal}
        XDEBUG_IDE_KEY: ${XDEBUG_IDE_KEY:-DOCKER}
        XDEBUG_LOG: /dev/stdout
        XDEBUG_LOG_LEVEL: 0
    entrypoint: php artisan octane:frankenphp --port=80 --workers=1 --max-requests=1
    ports:
      - "8002:80"
    volumes:
      - ./:/app
    networks:
      - klinik-project
    env_file:
      - .env
    environment:
      SUPERVISOR_PHP_COMMAND: "/usr/bin/php -d variables_order=EGPCS /var/www/html/artisan octane:start --server=frankenphp --host=0.0.0.0 --admin-port=2019 --port='${APP_PORT:-80}'" 
      XDG_CONFIG_HOME:  /var/www/html/config 
      XDG_DATA_HOME:  /var/www/html/data 
    depends_on:
      - postgres
      - redis

  # PostgreSQL Service
  postgres:
    image: postgres:13
    container_name: klinik-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      # POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql # Menambahkan init.sql  
    ports:
      - "${DB_PORT:-5432}:5432"  # ‚Üê harusnya expose port 5432
    networks:
      - klinik-project
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Service
  redis:
    image: redis:alpine
    container_name: klinik-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - klinik-project
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 3
      timeout: 5s

networks:
  klinik-project:
    driver: bridge

volumes:
  postgres-data:
    driver: local
