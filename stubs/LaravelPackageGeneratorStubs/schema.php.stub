<?php

namespace {{NAMESPACE}}\{{schema_namespace}};

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use {{NAMESPACE}}\{
    Supports\Base{{CLASS_BASENAME}}
};
use {{NAMESPACE}}\{{contract_namespace}}\{{schema_namespace}}\{{SCHEMA_NAME}} as Contracts{{SCHEMA_NAME}};
use {{NAMESPACE}}\{{contract_namespace}}\Data\{{SCHEMA_NAME}}Data;

class {{SCHEMA_NAME}} extends Base{{CLASS_BASENAME}} implements Contracts{{SCHEMA_NAME}}
{
    protected string $__entity = '{{SCHEMA_NAME}}';
    public ${{SNAKE_LOWER_SCHEMA_NAME}}_model;
    //protected mixed $__order_by_created_at = false; //asc, desc, false

    protected array $__cache = [
        'index' => [
            'name'     => '{{SNAKE_LOWER_SCHEMA_NAME}}',
            'tags'     => ['{{SNAKE_LOWER_SCHEMA_NAME}}', '{{SNAKE_LOWER_SCHEMA_NAME}}-index'],
            'duration' => 24 * 60
        ]
    ];

    public function prepareStore{{SCHEMA_NAME}}({{SCHEMA_NAME}}Data ${{SNAKE_LOWER_SCHEMA_NAME}}_dto): Model{
        $add = [
            'name' => ${{SNAKE_LOWER_SCHEMA_NAME}}_dto->name
        ];
        $guard  = ['id' => ${{SNAKE_LOWER_SCHEMA_NAME}}_dto->id];
        $create = [$guard, $add];
        // if (isset(${{SNAKE_LOWER_SCHEMA_NAME}}_dto->id)){
        //     $guard  = ['id' => ${{SNAKE_LOWER_SCHEMA_NAME}}_dto->id];
        //     $create = [$guard, $add];
        // }else{
        //     $create = [$add];
        // }

        ${{SNAKE_LOWER_SCHEMA_NAME}} = $this->usingEntity()->updateOrCreate(...$create);
        $this->fillingProps(${{SNAKE_LOWER_SCHEMA_NAME}},${{SNAKE_LOWER_SCHEMA_NAME}}_dto->props);
        ${{SNAKE_LOWER_SCHEMA_NAME}}->save();
        return $this->{{SNAKE_LOWER_SCHEMA_NAME}}_model = ${{SNAKE_LOWER_SCHEMA_NAME}};
    }
}